import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.22'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

allprojects {

    group = "com.example"
    version = "0.0.1-SNAPSHOT"

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_17.majorVersion
    }
    tasks {
        tasks.withType(KotlinCompile).configureEach {
            kotlinOptions {
                freeCompilerArgs = ['-Xjsr305=strict']
                jvmTarget = '18'
            }
        }

    }
}

test {
    useJUnitPlatform()
}

subprojects { subproject ->
    apply {
        plugin('org.jetbrains.kotlin.jvm')
        version = '1.8.22'
    }


    dependencies {
        if (subproject.name != "pcsin-common") {
            implementation project(":pcsin-common")
        }
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        implementation 'org.jetbrains.kotlin:kotlin-reflect'

        testImplementation 'org.mockito:mockito-core:4.0.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
    }
}

allOpen {
    annotation("org.springframework.stereotype.Controller")
    annotation("org.springframework.stereotype.Service")
    annotation("org.springframework.stereotype.Repository")
    annotation("org.springframework.boot.autoconfigure.SpringBootApplication")
    annotation("org.springframework.context.annotation.Configuration")
}